package main;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import main.commands.HoroscopeDayCommand;

import java.util.HashMap;
import java.util.Map;

public class HoroscopeBot extends TelegramLongPollingBot {

    private final Map<Long, String> userZodiacs = new HashMap<>();

    @Override
    public String getBotUsername() {
        return Config.getBotUsername();
    }

    @Override
    public String getBotToken() {
        return Config.getBotToken();
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (!update.hasMessage() || !update.getMessage().hasText()) return;

        long chatId = update.getMessage().getChatId();
        String text = update.getMessage().getText().trim();

        switch (text.toLowerCase()) {
            case "/start":
                sendText(chatId, """
                        ‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Sign Speak! ‚ú®
                        
                        –£–∑–Ω–∞–π, —á—Ç–æ –∑–≤—ë–∑–¥—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è!
                        
                        –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä 06.12).
                        –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ ‚Äî /help
                        """);
                break;

            case "/help":
                sendText(chatId, """
                        üìú –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                        /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                        /horoday - –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –¥–µ–Ω—å
                        /help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
                        """);
                break;

            case "/horoday":
                if (userZodiacs.containsKey(chatId)) {
                    String zodiac = userZodiacs.get(chatId);
                    sendText(chatId, "–¢–≤–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –¥–µ–Ω—å: " + HoroscopeDayCommand.getHoroscopeForSign(zodiac));
                } else {
                    sendText(chatId, "–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ /start!");
                }
                break;

            default:
                var maybeDate = ZodiacUtils.tryParseDate(text);
                if (maybeDate.isPresent()) {
                    var date = maybeDate.get();
                    String zodiac = ZodiacUtils.getZodiacByDate(date.getDayOfMonth(), date.getMonthValue());
                    userZodiacs.put(chatId, zodiac);
                    sendText(chatId, "–¢–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: " + zodiac);
                } else {
                    sendText(chatId, "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å —Ñ–æ—Ä–º–∞—Ç (–î–î.–ú–ú) –∏ —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç–∞–∫–∞—è –¥–∞—Ç–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
                }
                break;

        }
    }

    private void sendText(long chatId, String text) {
        SendMessage message = new SendMessage(String.valueOf(chatId), text);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }
}
